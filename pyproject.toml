[tool.poetry]
name = "prefeitura-rio"
version = "1.0.2"
description = "Pacote Python que implementa utilidades para nossos projetos!"
authors = ["Gabriel Gazola Milan <gabriel.gazola@poli.ufrj.br>"]
license = "GPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/prefeitura-rio/prefeitura-rio"
repository = "https://github.com/prefeitura-rio/prefeitura-rio"
keywords = ["python", "utilities", "government"]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
basedosdados = { version = "2.0.0b13", extras = ["upload"], optional = true }
google-cloud-storage = { version = "^2.10.0", optional = true }
infisical = { version = "^1.4.2", optional = true }
loguru = "^0.7.0"
numpy = { version = "^1.23.3", optional = true }
pandas = { version = "^2.0.3", optional = true }
pendulum = { version = "^2.1.2", optional = true }
prefect = { version = "1.4", optional = true }
pytz = { version = "^2023.3", optional = true }
requests = { version = "^2.31.0", optional = true }
scikit-learn = { version = "^1.1.2", optional = true }
sentry-sdk = { version = "^1.29.2", optional = true }

[tool.poetry.extras]
all = [
    "basedosdados",
    "google-cloud-storage",
    "infisical",
    "numpy",
    "pandas",
    "pendulum",
    "prefect",
    "pytz",
    "requests",
    "scikit-learn",
    "sentry-sdk",
]
metrics = ["numpy", "scikit-learn"]
pipelines = [
    "basedosdados",
    "google-cloud-storage",
    "infisical",
    "pandas",
    "prefect",
    "sentry-sdk",
]
sgrc = ["pendulum", "pytz", "requests"]

[tool.poetry.group.dev.dependencies]
black = "^22.3.0"
flake8 = "^4.0.1"
isort = "^5.12.0"
mako = "^1.2.4"
markdown = "^3.4.3"
pdoc3 = "^0.10.0"
pre-commit = "^2.18.1"
pytest-cov = "^3.0.0"
taskipy = "^1.12.0"

[tool.black]
line-length = 100
target-version = ["py39", "py310"]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = ["--doctest-modules", "--cov=prefeitura_rio", "-r a", "-v"]
norecursedirs = [
    "dist",
    "build",
    "docs",
    ".tox",
    ".eggs",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    ".git",
    "__pycache__",
    "scripts",
]
testpaths = ["tests"]

[tool.taskipy.tasks]
docs = "poetry run pdoc3 --html --html-dir docs prefeitura_rio"
lint = "poetry run pre-commit run --all-files"
test = "poetry run pytest"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
